How did viewing a diff between two versions of a file help you see the bug that
was introduced?

A. Viewing the difference in both files assisted with find the bug as it showed exactly where the changes were made.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

A. Having easy access to entire history of a file makes it easier to see and revert changes and also track process.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

A. The pros to manually commit changes is that each change would make sense logically. A drawback to manual commit is that one may forget to commit changes at the apporiate time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?


A. I beleive that reason why you are able to save multiple files in one commit in git is beacause even though you might make a change in one place it may affect multiple files

How can you use the commands git log and git diff to view the history of files?

A. You can use git log to show you a history of all the commits been made. You can then use git diff to compare the id if the commits that you would like to track the changes on.

How might using version control make you more confident to make changes that
could break something?

A. With version control I am more confident with making changes to code because in the event a bug is introduced I can always revert(checkout) to a pervious commit before the error was introduce. I can then use git diff to see the changes that were made between versions.

Now that you have your workspace set up, what do you want to try using Git for?

  I would like to use git to manage my code versions